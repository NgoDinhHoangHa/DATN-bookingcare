{
  "version": 3,
  "sources": ["../src/index.ts", "../src/internal/index.ts", "../src/hooks/meta.ts", "../src/utils/global.ts", "../src/utils/tools.ts", "../src/utils/promise.ts", "../src/hooks/visible.ts", "../src/hooks/holder.ts", "../src/helper/render.ts", "../src/helper/define.ts", "../src/transform/index.ts", "../src/components/index.ts"],
  "sourcesContent": ["import type { App } from 'vue-demi'\r\nimport { context } from './internal'\r\n\r\nconst install = (app: App) => {\r\n  context.appContext = app._context\r\n}\r\nconst unoverlay = { install }\r\n\r\nexport type { ImperativeOverlay, RenderOptions } from './transform'\r\nexport type { OverlayOptions, OverlayMeta, InjectionHolder } from './hooks'\r\nexport { useOverlayMeta, useInjectHolder } from './hooks'\r\nexport { createOverlay, renderOverlay } from './transform'\r\nexport { UnifiedOverlayProvider } from './components'\r\nexport { install }\r\n\r\nexport default unoverlay\r\n", "import type { AppContext, InjectionKey } from 'vue-demi'\r\nimport type { OverlayMeta } from '../hooks'\r\n\r\nexport const context = {\r\n  appContext: null as null | AppContext,\r\n}\r\nexport const OverlayMetaKey: InjectionKey<OverlayMeta> = Symbol('__imperative_overlay_key')\r\n\r\nexport enum OverEvents {\r\n  Cancel = 'cancel',\r\n  Confirm = 'confirm',\r\n}\r\n", "import type { Ref } from 'vue-demi'\r\nimport { getCurrentInstance, inject, onMounted, provide, ref, watch } from 'vue-demi'\r\nimport { useVModel } from '@vueuse/core'\r\nimport { OverlayMetaKey } from '../internal'\r\nimport { delay, noop } from '../utils'\r\n\r\nexport interface OverlayOptions {\r\n  /** animation duration to avoid premature destruction of components */\r\n  animation?: number\r\n  /** whether to set visible to true immediately */\r\n  immediate?: boolean\r\n  /**\r\n   * v-model fields used by template\r\n   *\r\n   * @default 'visible'\r\n   */\r\n  model?: string\r\n\r\n  /**\r\n   * template use event name\r\n   */\r\n  event?: {\r\n    /**\r\n   * cancel event name used by the template\r\n   *\r\n   * @default 'cancel'\r\n   */\r\n    cancel?: string\r\n    /**\r\n   * confirm event name used by the template\r\n   *\r\n   * @default 'confirm'\r\n   */\r\n    confirm?: string\r\n  }\r\n  /**\r\n   * whether to automatically handle components based on visible and animation\r\n   *\r\n   * @default true\r\n   */\r\n  automatic?: boolean\r\n}\r\n\r\nexport interface OverlayMeta {\r\n  /** the notification cancel, modify visible, and destroy it after the animation ends */\r\n  cancel: Function\r\n  /** the notification confirm, modify visible, and destroy it after the animation ends */\r\n  confirm: Function\r\n  /** destroy the current instance (immediately) */\r\n  vanish: Function\r\n  /** visible control popup display and hide */\r\n  visible: Ref<boolean>\r\n  /** use in template */\r\n  isTemplate?: boolean\r\n}\r\n\r\n/**\r\n * get overlay layer meta information\r\n * @function cancel  the notification cancel, modify visible, and destroy it after the animation ends\r\n * @function confirm the notification confirm, modify visible, and destroy it after the animation ends\r\n * @function vanish destroy the current instance (immediately)\r\n * @field visible control popup display and hide\r\n * @returns\r\n */\r\nexport function useOverlayMeta(options: OverlayOptions = {}) {\r\n  const { animation = 0, immediate = true, model = 'visible', automatic = true } = options\r\n  const meta = inject(OverlayMetaKey, useTemplateMeta(model, options))\r\n\r\n  // The component directly obtains the default value\r\n  // vanish will have no effect, and no watch will be performed.\r\n  if (!meta.isTemplate && automatic) {\r\n    watch(meta.visible, async () => {\r\n      if (meta.visible.value)\r\n        return undefined\r\n      if (animation > 0)\r\n        await delay(animation)\r\n      meta.vanish?.()\r\n    })\r\n  }\r\n\r\n  if (immediate)\r\n    onMounted(() => (meta.visible.value = true))\r\n\r\n  provide(OverlayMetaKey, null)\r\n  return meta\r\n}\r\n\r\nexport function useTemplateMeta(model: string, options: OverlayOptions = {}) {\r\n  const instance = getCurrentInstance()\r\n  const events = options.event || {}\r\n\r\n  const visible = instance ? useVModel(instance.props, model) as Ref<boolean> : ref(false)\r\n\r\n  const cancel = (value?: any) => {\r\n    visible.value = false\r\n    instance?.emit(events.cancel || 'cancel', value)\r\n  }\r\n  const confirm = (value?: any) => {\r\n    visible.value = false\r\n    instance?.emit(events.confirm || 'confirm', value)\r\n  }\r\n  return {\r\n    cancel,\r\n    confirm,\r\n    vanish: noop,\r\n    visible,\r\n    isTemplate: true,\r\n  }\r\n}\r\n", "export const UnifiedOverlayProviderID = 'unified-overlay'\r\n\r\nexport function createGlobalNode(id = '', root: HTMLElement = document.body) {\r\n  const el = document.createElement('div')\r\n\r\n  if (id)\r\n    el.id = id\r\n\r\n  root.appendChild(el)\r\n\r\n  return el\r\n}\r\n", "import { UnifiedOverlayProviderID } from './global'\r\n\r\nexport function noop() {}\r\n\r\nexport function allowed() {\r\n  throw new Error('overlay - Error: It is not allowed to call confirm and cancel externally immediately, please wait for the component to render')\r\n}\r\n\r\nexport function delay(milliseconds: number) {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\nexport function varName(id = UnifiedOverlayProviderID, auto = true) {\r\n  if (auto)\r\n    return `${id}--${varName.index++}`\r\n\r\n  return id\r\n}\r\n\r\nvarName.index = 1\r\n", "import { allowed } from './tools'\r\n\r\nexport type ImperativePromiser<T = void> = Promiser<{ confirm: Function; cancel: Function }, T>\r\nexport type ImperativePromise<T = void> = ImperativePromiser<T>['promise']\r\n\r\nexport interface Promiser<P = object, T = void> {\r\n  promise: Promise<T> & P\r\n  resolve: Function\r\n  reject: Function\r\n}\r\n\r\nexport function createPromiser<P, T = void>(): Promiser<P, T> {\r\n  let resolve!: Function\r\n  let reject!: Function\r\n  const promise = new Promise<any>((_resolve, _reject) => {\r\n    resolve = _resolve\r\n    reject = _reject\r\n  }) as unknown as any\r\n  return { promise, reject, resolve }\r\n}\r\n\r\nexport function createImperativePromiser<T = void>() {\r\n  const promiser = createPromiser<{ confirm: Function; cancel: Function }, T>()\r\n  promiser.promise.confirm = allowed\r\n  promiser.promise.cancel = allowed\r\n  return promiser as ImperativePromiser<T>\r\n}\r\n", "import type { Ref } from 'vue-demi'\r\nimport type { Emitter } from 'mitt'\r\nimport { OverEvents } from '../internal'\r\nimport type { ImperativePromiser } from '../utils'\r\n\r\nexport interface VisiblePromiseOptions {\r\n  promiser?: ImperativePromiser\r\n  vanish?: Function\r\n  events?: Emitter<any>\r\n}\r\n\r\nexport function useVisibleScripts(visible: Ref<boolean>, options: VisiblePromiseOptions) {\r\n  function cancel(value?: any) {\r\n    options.promiser?.reject(value)\r\n    options.events?.emit(OverEvents.Cancel, value)\r\n    visible.value = false\r\n  }\r\n  function confirm(value?: any) {\r\n    options.promiser?.resolve(value)\r\n    options.events?.emit(OverEvents.Confirm, value)\r\n    visible.value = false\r\n  }\r\n  function vanish() {\r\n    options.vanish?.()\r\n    options.promiser?.reject()\r\n  }\r\n\r\n  if (options.promiser) {\r\n    options.promiser.promise.confirm = confirm\r\n    options.promiser.promise.cancel = cancel\r\n  }\r\n\r\n  return { visible, confirm, cancel, vanish }\r\n}\r\n", "import type { Component } from 'vue-demi'\r\nimport { Teleport, h, nextTick, provide, reactive, ref } from 'vue-demi'\r\n\r\nimport mitt from 'mitt'\r\n\r\nimport type { MountOptions } from '../helper'\r\nimport { defineProviderComponent } from '../helper'\r\nimport { createImperativePromiser, varName } from '../utils'\r\nimport { OverlayMetaKey } from '../internal'\r\nimport type { ImperativeOverlay } from '../transform'\r\nimport type { VisiblePromiseOptions } from './visible'\r\nimport { useVisibleScripts } from './visible'\r\n\r\nexport type InjectionHolder<Props, Resolved> = [ImperativeOverlay<Props, Resolved>, Component]\r\n\r\nexport function useInjectHolder<Props, Resolved = void>(\r\n  component: Component,\r\n  options: Omit<MountOptions, 'appContext'> = {},\r\n): InjectionHolder<Props, Resolved> {\r\n  const { callback, scripts, props, refresh } = useRefreshMetadata()\r\n  const name = varName(options.id, options.autoIncrement)\r\n\r\n  function render() {\r\n    return h(Teleport,\r\n      { to: options.root || document.body, disabled: !!(options.root === false) },\r\n      [\r\n        h('div', { id: name }, [h(component, props.value)]),\r\n      ],\r\n    )\r\n  }\r\n\r\n  const holder = defineProviderComponent(component, {\r\n    render: false,\r\n    setup() {\r\n      provide(OverlayMetaKey, scripts)\r\n      return () => refresh.value ? render() : null\r\n    },\r\n  })\r\n\r\n  return [callback as any, holder]\r\n}\r\n\r\nexport function useRefreshMetadata() {\r\n  const visible = ref(false)\r\n  const refresh = ref(false)\r\n  const events = mitt()\r\n  const props = ref<any>()\r\n  const options = reactive<VisiblePromiseOptions>({\r\n    events,\r\n    vanish,\r\n  })\r\n  const scripts = useVisibleScripts(visible, options)\r\n\r\n  function vanish() {\r\n    refresh.value = false\r\n    props.value = {}\r\n    events.off('*')\r\n  }\r\n\r\n  async function callback(_props: any) {\r\n    props.value = _props\r\n    refresh.value = true\r\n    await nextTick()\r\n    visible.value = true\r\n    const promiser = createImperativePromiser()\r\n    Object.assign(options, { promiser })\r\n    return promiser.promise\r\n  }\r\n\r\n  return { callback, scripts, props, refresh }\r\n}\r\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport type { Component } from 'vue-demi'\r\nimport { createApp, createVNode, defineComponent, h, render } from 'vue-demi'\r\n\r\nimport { pascalCase } from 'pascal-case'\r\nimport { context } from '../internal'\r\nimport { createGlobalNode, varName } from '../utils'\r\nimport { defineProviderComponent } from './define'\r\nimport type { MountOptions } from './interface'\r\n\r\nexport interface RenderChildOptions extends MountOptions {\r\n  setup?: () => void\r\n}\r\n\r\nexport function renderVNode(\r\n  component: Component,\r\n  props?: Record<string, any>,\r\n  options: RenderChildOptions = {},\r\n) {\r\n  // There is no need to call document.body.removeChild(container.firstElementChild) here\r\n  // Because calling render(null, container) does the work for us\r\n  const name = varName(options.id, options.autoIncrement)\r\n\r\n  function vanish() {\r\n    render(null, container)\r\n    container.remove()\r\n  }\r\n\r\n  const Provider = defineProviderComponent(component, {\r\n    name: pascalCase(name),\r\n    setup: options.setup,\r\n    props,\r\n  })\r\n\r\n  const vnode = createVNode(Provider)\r\n  const container = createGlobalNode(name, options.root || document.body)\r\n\r\n  vnode.appContext = options.appContext || context.appContext\r\n\r\n  render(vnode, container)\r\n\r\n  return { vanish }\r\n}\r\n\r\nexport function renderChildApp(\r\n  component: Component,\r\n  props?: Record<string, any>,\r\n  options: RenderChildOptions = {}) {\r\n  const name = varName(options.id, options.autoIncrement)\r\n\r\n  function vanish() {\r\n    app.unmount()\r\n    container.remove()\r\n  }\r\n\r\n  const Provider = defineComponent({\r\n    name: pascalCase(name),\r\n    setup() {\r\n      options.setup?.()\r\n    },\r\n    render() {\r\n      return h(component as any, props)\r\n    },\r\n  })\r\n\r\n  const app = createApp(Provider)\r\n\r\n  const parent = options.appContext?.app || context.appContext?.app\r\n  if (parent) {\r\n    app.config.globalProperties = parent.config.globalProperties\r\n    const { reload, ...appContext } = parent._context as any\r\n    Object.assign(app._context, appContext)\r\n  }\r\n\r\n  const container = createGlobalNode(name, options.root || document.body)\r\n\r\n  app.mount(container)\r\n\r\n  return { vanish }\r\n}\r\n", "import type { Component, RenderFunction, SetupContext } from 'vue-demi'\r\nimport { defineComponent, h } from 'vue-demi'\r\n\r\nexport interface ComponentOptions {\r\n  name?: string\r\n  props?: any\r\n  setup?: (props: any, context: SetupContext) => RenderFunction | void | any\r\n  render?: Function | false\r\n}\r\nexport function defineProviderComponent(component: Component, options: ComponentOptions) {\r\n  function defaultRender() {\r\n    return h(component, options.props)\r\n  }\r\n  const Provider = defineComponent({\r\n    name: options.name,\r\n    setup: options.setup,\r\n    render: options.render === false\r\n      ? undefined\r\n      : (options.render || defaultRender),\r\n  })\r\n  return Provider\r\n}\r\n", "import type { Component, ExtractPropTypes } from 'vue-demi'\r\nimport { provide, ref } from 'vue-demi'\r\n\r\nimport { renderChildApp } from '../helper'\r\nimport type { MountOptions } from '../helper'\r\nimport { OverlayMetaKey } from '../internal'\r\nimport type { ImperativePromise } from '../utils'\r\nimport { createImperativePromiser, noop } from '../utils'\r\n\r\nimport { useVisibleScripts } from '../hooks'\r\n\r\nexport interface ImperativeOverlay<Props, Resolved> {\r\n  (props?: ExtractPropTypes<Props>, options?: MountOptions): ImperativePromise<Resolved>\r\n}\r\n\r\nexport interface RenderOptions<Props> extends MountOptions {\r\n  props?: ExtractPropTypes<Props>\r\n}\r\n\r\n/**\r\n * Create imperative overlay\r\n * @param component Component\r\n */\r\nexport function createOverlay<Props, Resolved = void>(component: Component): ImperativeOverlay<Props, Resolved> {\r\n  function executor(props: any, promiser: any, options?: any) {\r\n    const caches = { vanish: noop }\r\n    function setup() {\r\n      const visible = ref(false)\r\n      const scripts = useVisibleScripts(visible, Object.assign(caches, { promiser }))\r\n      provide(OverlayMetaKey, scripts)\r\n    }\r\n    caches.vanish = renderChildApp(component, props, { ...options, setup }).vanish\r\n  }\r\n\r\n  function caller(props: any, options?: any) {\r\n    const promiser = createImperativePromiser()\r\n    executor(props, promiser, options)\r\n    return promiser.promise as unknown as ImperativePromise<Resolved>\r\n  }\r\n\r\n  return caller\r\n}\r\n\r\n/**\r\n * Execute overlay component\r\n * @param component Component\r\n * @param options mount options and props\r\n */\r\nexport function renderOverlay<Props = {}, Resolved = void>(\r\n  component: Component,\r\n  options: RenderOptions<Props> = {},\r\n) {\r\n  return createOverlay<Props, Resolved>(component)(options.props, options)\r\n}\r\n", "import type { Component } from 'vue-demi'\r\nimport { defineComponent, getCurrentInstance } from 'vue-demi'\r\nimport { context } from '../internal'\r\n\r\nexport const UnifiedOverlayProvider = defineComponent({\r\n  setup(_, { slots }) {\r\n    const { appContext } = getCurrentInstance()!\r\n    context.appContext = appContext\r\n    return () => slots.default?.()\r\n  },\r\n}) as Component\r\n"],
  "mappings": "k3BAAA,+JCGO,GAAM,GAAU,CACrB,WAAY,IACd,EACa,EAA4C,OAAO,0BAA0B,ECL1F,MAA2E,cAC3E,EAA0B,kBCFnB,GAAM,GAA2B,kBAEjC,WAA0B,EAAK,GAAI,EAAoB,SAAS,KAAM,CAC3E,GAAM,GAAK,SAAS,cAAc,KAAK,EAEvC,MAAI,IACF,GAAG,GAAK,GAEV,EAAK,YAAY,CAAE,EAEZ,CACT,CCTO,YAAgB,CAAC,CAEjB,YAAmB,CACxB,KAAM,IAAI,OAAM,+HAA+H,CACjJ,CAEO,WAAe,EAAsB,CAC1C,MAAO,IAAI,SAAQ,GAAW,WAAW,EAAS,CAAY,CAAC,CACjE,CAEO,WAAiB,EAAK,EAA0B,EAAO,GAAM,CAClE,MAAI,GACK,GAAG,MAAO,EAAQ,UAEpB,CACT,CAEA,EAAQ,MAAQ,ECRT,YAAuD,CAC5D,GAAI,GACA,EAKJ,MAAO,CAAE,QAJO,GAAI,SAAa,CAAC,EAAU,IAAY,CACtD,EAAU,EACV,EAAS,CACX,CAAC,EACiB,SAAQ,SAAQ,CACpC,CAEO,YAA8C,CACnD,GAAM,GAAW,EAA2D,EAC5E,SAAS,QAAQ,QAAU,EAC3B,EAAS,QAAQ,OAAS,EACnB,CACT,CHsCO,WAAwB,EAA0B,CAAC,EAAG,CAC3D,GAAM,CAAE,YAAY,EAAG,YAAY,GAAM,QAAQ,UAAW,YAAY,IAAS,EAC3E,EAAO,aAAO,EAAgB,EAAgB,EAAO,CAAO,CAAC,EAInE,MAAI,CAAC,EAAK,YAAc,GACtB,YAAM,EAAK,QAAS,SAAY,CAvEpC,MAwEM,AAAI,EAAK,QAAQ,OAEb,GAAY,GACd,KAAM,GAAM,CAAS,EACvB,KAAK,SAAL,gBACF,CAAC,EAGC,GACF,gBAAU,IAAO,EAAK,QAAQ,MAAQ,EAAK,EAE7C,cAAQ,EAAgB,IAAI,EACrB,CACT,CAEO,WAAyB,EAAe,EAA0B,CAAC,EAAG,CAC3E,GAAM,GAAW,yBAAmB,EAC9B,EAAS,EAAQ,OAAS,CAAC,EAE3B,EAAU,EAAW,gBAAU,EAAS,MAAO,CAAK,EAAoB,UAAI,EAAK,EAUvF,MAAO,CACL,OATa,AAAC,GAAgB,CAC9B,EAAQ,MAAQ,GAChB,WAAU,KAAK,EAAO,QAAU,SAAU,EAC5C,EAOE,QANc,AAAC,GAAgB,CAC/B,EAAQ,MAAQ,GAChB,WAAU,KAAK,EAAO,SAAW,UAAW,EAC9C,EAIE,OAAQ,EACR,UACA,WAAY,EACd,CACF,CIjGO,WAA2B,EAAuB,EAAgC,CACvF,WAAgB,EAAa,CAZ/B,QAaI,KAAQ,WAAR,QAAkB,OAAO,GACzB,KAAQ,SAAR,QAAgB,KAAK,SAAmB,GACxC,EAAQ,MAAQ,EAClB,CACA,WAAiB,EAAa,CAjBhC,QAkBI,KAAQ,WAAR,QAAkB,QAAQ,GAC1B,KAAQ,SAAR,QAAgB,KAAK,UAAoB,GACzC,EAAQ,MAAQ,EAClB,CACA,YAAkB,CAtBpB,QAuBI,KAAQ,SAAR,gBACA,KAAQ,WAAR,QAAkB,QACpB,CAEA,MAAI,GAAQ,UACV,GAAQ,SAAS,QAAQ,QAAU,EACnC,EAAQ,SAAS,QAAQ,OAAS,GAG7B,CAAE,UAAS,UAAS,SAAQ,QAAO,CAC5C,CChCA,MAA8D,cAE9D,EAAiB,aCDjB,MAAmE,cAEnE,EAA2B,iBCH3B,MAAmC,cAQ5B,WAAiC,EAAsB,EAA2B,CACvF,YAAyB,CACvB,MAAO,QAAE,EAAW,EAAQ,KAAK,CACnC,CAQA,MAPiB,sBAAgB,CAC/B,KAAM,EAAQ,KACd,MAAO,EAAQ,MACf,OAAQ,EAAQ,SAAW,GACvB,OACC,EAAQ,QAAU,CACzB,CAAC,CAEH,CDuBO,WACL,EACA,EACA,EAA8B,CAAC,EAAG,CA/CpC,QAgDE,GAAM,GAAO,EAAQ,EAAQ,GAAI,EAAQ,aAAa,EAEtD,YAAkB,CAChB,EAAI,QAAQ,EACZ,EAAU,OAAO,CACnB,CAEA,GAAM,GAAW,sBAAgB,CAC/B,KAAM,iBAAW,CAAI,EACrB,OAAQ,CAzDZ,MA0DM,KAAQ,QAAR,eACF,EACA,QAAS,CACP,MAAO,QAAE,EAAkB,CAAK,CAClC,CACF,CAAC,EAEK,EAAM,gBAAU,CAAQ,EAExB,EAAS,MAAQ,aAAR,cAAoB,MAAO,MAAQ,aAAR,cAAoB,KAC9D,GAAI,EAAQ,CACV,EAAI,OAAO,iBAAmB,EAAO,OAAO,iBAC5C,GAAM,CAAE,YAAW,GAAe,EAAO,SACzC,OAAO,OAAO,EAAI,SAAU,CAAU,CACxC,CAEA,GAAM,GAAY,EAAiB,EAAM,EAAQ,MAAQ,SAAS,IAAI,EAEtE,SAAI,MAAM,CAAS,EAEZ,CAAE,QAAO,CAClB,CDhEO,WACL,EACA,EAA4C,CAAC,EACX,CAClC,GAAM,CAAE,WAAU,UAAS,QAAO,WAAY,EAAmB,EAC3D,EAAO,EAAQ,EAAQ,GAAI,EAAQ,aAAa,EAEtD,YAAkB,CAChB,MAAO,QAAE,WACP,CAAE,GAAI,EAAQ,MAAQ,SAAS,KAAM,SAAa,EAAQ,OAAS,EAAO,EAC1E,CACE,QAAE,MAAO,CAAE,GAAI,CAAK,EAAG,CAAC,QAAE,EAAW,EAAM,KAAK,CAAC,CAAC,CACpD,CACF,CACF,CAEA,GAAM,GAAS,EAAwB,EAAW,CAChD,OAAQ,GACR,OAAQ,CACN,oBAAQ,EAAgB,CAAO,EACxB,IAAM,EAAQ,MAAQ,EAAO,EAAI,IAC1C,CACF,CAAC,EAED,MAAO,CAAC,EAAiB,CAAM,CACjC,CAEO,YAA8B,CACnC,GAAM,GAAU,UAAI,EAAK,EACnB,EAAU,UAAI,EAAK,EACnB,EAAS,cAAK,EACd,EAAQ,UAAS,EACjB,EAAU,eAAgC,CAC9C,SACA,QACF,CAAC,EACK,EAAU,EAAkB,EAAS,CAAO,EAElD,YAAkB,CAChB,EAAQ,MAAQ,GAChB,EAAM,MAAQ,CAAC,EACf,EAAO,IAAI,GAAG,CAChB,CAEA,iBAAwB,EAAa,CACnC,EAAM,MAAQ,EACd,EAAQ,MAAQ,GAChB,KAAM,eAAS,EACf,EAAQ,MAAQ,GAChB,GAAM,GAAW,EAAyB,EAC1C,cAAO,OAAO,EAAS,CAAE,UAAS,CAAC,EAC5B,EAAS,OAClB,CAEA,MAAO,CAAE,WAAU,UAAS,QAAO,SAAQ,CAC7C,CGrEA,MAA6B,cAsBtB,WAA+C,EAA0D,CAC9G,WAAkB,EAAY,EAAe,EAAe,CAC1D,GAAM,GAAS,CAAE,OAAQ,CAAK,EAC9B,YAAiB,CACf,GAAM,GAAU,UAAI,EAAK,EACnB,EAAU,EAAkB,EAAS,OAAO,OAAO,EAAQ,CAAE,UAAS,CAAC,CAAC,EAC9E,cAAQ,EAAgB,CAAO,CACjC,CACA,EAAO,OAAS,EAAe,EAAW,EAAO,CAAE,GAAG,EAAS,OAAM,CAAC,EAAE,MAC1E,CAEA,WAAgB,EAAY,EAAe,CACzC,GAAM,GAAW,EAAyB,EAC1C,SAAS,EAAO,EAAU,CAAO,EAC1B,EAAS,OAClB,CAEA,MAAO,EACT,CAOO,WACL,EACA,EAAgC,CAAC,EACjC,CACA,MAAO,GAA+B,CAAS,EAAE,EAAQ,MAAO,CAAO,CACzE,CCpDA,MAAoD,cAG7C,GAAM,GAAyB,sBAAgB,CACpD,MAAM,EAAG,CAAE,SAAS,CAClB,GAAM,CAAE,cAAe,yBAAmB,EAC1C,SAAQ,WAAa,EACd,IAAG,CARd,MAQiB,WAAM,UAAN,sBACf,CACF,CAAC,EXPD,GAAM,GAAU,AAAC,GAAa,CAC5B,EAAQ,WAAa,EAAI,QAC3B,EACM,GAAY,CAAE,SAAQ,EAS5B,GAAO,IAAQ",
  "names": []
}
