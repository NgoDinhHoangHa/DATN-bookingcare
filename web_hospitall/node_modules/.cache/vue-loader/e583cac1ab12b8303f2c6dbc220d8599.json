{"remainingRequest":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\src\\components\\manage\\pages\\BookList.vue?vue&type=style&index=0&id=1da8b13c&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\src\\components\\manage\\pages\\BookList.vue","mtime":1706173185626},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696609016209},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1696609025699},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\postcss-loader\\src\\index.js","mtime":1696609020690},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696609014128},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1696609025699}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnRhYmxlIHsKICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjODY4NTg1OwogICAgd2lkdGg6IDEwMCU7CiAgICBjb2xvcjogIzMzMzsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBib3JkZXItcmFkaXVzOiA0MHB4OwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIG1hcmdpbjogYXV0bzsKICAgIG1hcmdpbi10b3A6IDUwcHg7CiAgICBtYXJnaW4tYm90dG9tOiA1MHB4Owp9Cgp0YWJsZSB0aCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZFMkZGOwogICAgY29sb3I6ICNmZmY7CiAgICBmb250LXdlaWdodDogNTAwOwogICAgcGFkZGluZzogMTBweDsKICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgICBsZXR0ZXItc3BhY2luZzogMXB4OwogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNmZmY7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYzsKfQoKdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHRkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7Cn0KCnRhYmxlIHRyOmhvdmVyIHRkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFOEU4RTg7Cn0KCnRhYmxlIHRkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7CiAgICBmb250LXdlaWdodDogNTAwOwp9Cg=="},{"version":3,"sources":["C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\src\\components\\manage\\pages\\BookList.vue"],"names":[],"mappings":"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","file":"C:/Users/OS/OneDrive - University of Technology and Education/Desktop/DATN-bookingcare/web_hospitall/src/components/manage/pages/BookList.vue","sourceRoot":"","sourcesContent":["<template>\n    <Base :onInput=\"onInput\" :optional=\"[\n        { id: 'all', name: 'Tất cả', color: 'black', value: null },\n        { id: 1, name: 'Đã huỷ', color: 'gray', value: -1 },\n        { id: 2, name: 'Chưa duyệt', color: 'red', value: 0 },\n        { id: 3, name: 'Đã duyệt', color: 'green', value: 1 },\n        { id: 4, name: 'Đã khám', color: 'var(--color-bold)', value: 2 },\n        { id: 5, name: 'Đã phản hồi', color: 'orange', value: 3 },\n    ]\" :handleOptional=\"(item) => { this.optionalActive = item }\" :optionalActive=\"optionalActive\">\n    <Table style=\"border-radius: 20px;\" :hideCrud=\"true\" :title=\"'Danh sách lịch đặt khám'\" :heading=\"['Tên khách hàng', 'Số điện thoại', 'Lí do khám', 'Tên bác sĩ', 'Giờ khám',\n        'Ngày khám', 'Thời gian đặt', 'Tình trạng', 'KQ khám', 'Sửa']\" :list=\"list\" :loading=\"loading\">\n        <tr v-for=\"(item, index) in (\n            optionalActive.id === 'all' ? list : list.filter(dt => dt.status_book_list == optionalActive.value)\n        )\" :key=\"item.id\">\n            <td>{{ index + 1 }}</td>\n            <td>\n                {{ item.fullname_main }}\n            </td>\n            <td>\n                {{ item.phone_main }}\n            </td>\n            <td>\n                {{ item.reason_main }}\n            </td>\n            <td>\n                {{ item.name_doctor }}\n            </td>\n            <td>\n                {{ item.time }}\n            </td>\n            <td>\n                {{ item.name + \"/\" + item.year }}\n            </td>\n            <td>\n                {{ item.created_at_main }}\n            </td>\n            <td>\n                <ItemStatus :statusMain=\"item.status_book_list\" :isAdmin=\"true\"></ItemStatus>\n            </td>\n            <td>\n                <span @click=\"resultItem(item.fullname_main, item.status_book_list, item.reason_main, item.result, item.price, item.time)\" class=\"bx bx-file\"\n                    :class=\"item.status_book_list === 4 || item.status_book_list === 2 || item.status_book_list === 3 ? '' : 'disabled'\"></span>\n            </td>\n            <td>\n                <span @click=\"editItem(item.idbooklist_main, item.status_book_list)\" class=\"bx bx-pencil\"\n                    :class=\"item.status_book_list === -1 || item.status_book_list === 2 || item.status_book_list === 3 ? 'disabled' : ''\"></span>\n            </td>\n        </tr>\n    </Table>\n    <ModalOptionData v-if=\"modal.data && modal.type === 'option'\" :list=\"[{ id: -1, name: 'Huỷ lịch', status: -1, hide: status == -1 || status == 1 },\n    { id: 1, name: 'Duyệt lịch', status: 1, hide: status == 1 },\n    { id: 2, name: 'Đã khám', status: 2, hide: status == 0 }, { id: 3, name: 'Huỷ', status: -1, hide: status == 0 }]\"\n        table=\"booklist\" :setList=\"setList\" name=\"booklist-status\" title=\"Lịch đặt khám\" :id=\"id\" :status=\"status\">\n    </ModalOptionData>\n    <ModalResult v-if=\"modal.data && modal.type === 'result'\" :list=\"[]\" :table=\"modal.table\" :setList=\"setList\"\n        :name=\"modal.name\" :title=\"'Kết quả khám'\" :id=\"id\" :status=\"status\" :key=\"modal.type\" :nameProp=\"modal.name\"\n        :reasonProp=\"modal.reason\" :resultProp=\"modal.result\" :priceProp=\"modal.price\" :timeProp=\"modal.time\">\n        {{ modal.data && modal.type === 'result' ? 'ModalResult Hiển thị' : 'ModalResult Ẩn' }}\n    </ModalResult>\n\n    </Base>\n</template>\n<script>\nimport Base from \"./Base.vue\";\n// import Popup from \"./abcn.vue\";\nimport Table from \"../Table.vue\";\nimport ItemStatus from '../../user/components/ItemComponent/ItemStatus.vue';\nimport Request from \"../../../Request\";\nimport ModalOptionData from \"../modal/ModalOptionData.vue\";\nimport { mapMutations, mapState } from \"vuex\";\nimport ModalResult from \"../modal/ModalResult.vue\";\nexport default {\n    components: {\n        Base,\n        Table,\n        ItemStatus,\n        ModalOptionData,\n        ModalResult\n    },\n    computed: {\n        ...mapState(['modal', 'admin'])\n    },\n    methods: {\n        ...mapMutations(['setModal']),\n        onInput: function (event) {\n            this.value = event.target.value;\n            this.loading = true;\n            this.counter += 1;\n            clearTimeout(this.timeOut);\n            this.timeOut = setTimeout(async () => {\n                try {\n                    const result = await Request.Post(`/booklist-search`, {\n                        value: event.target.value,\n                        status: this.optionalActive.value\n                    });\n                    this.list = result.data.data;\n                    this.loading = false;\n                } catch (error) {\n                    alert(error);\n                }\n            }, 300);\n        },\n        editItem: function (id, status) {\n            this.id = id;\n            if (status !== -1 && status !== 2 && status !== 3) {\n                this.status = status;\n                this.setModal({ ...this.modal, data: true, type: 'option' })\n            }\n        },\n        resultItem: function (name, status, reason, result, price, time) {\n            console.log(price)\n            if (status !== -1 && status !== 4 && status !== 3) {\n                this.status = status;\n                this.setModal({ ...this.modal, data: true, reason: reason, name: name, type: 'result', result: result, price: price, time: time })\n            }\n        },\n        editItem2: function () {\n            alert(\"Bệnh nhân này chưa có lịch sử bệnh án\");\n        },\n\n\n        setList: function (item) {\n            const index = [...this.list].findIndex(dt => Number(dt.idbooklist_main) === Number(item.idbooklist_main));\n            if (index !== -1) {\n                let clone = [...this.list];\n                clone[index] = item;\n                this.list = clone;\n            }\n            else {\n                this.list = [...this.list, item];\n            }\n        },\n        fetchData: async function () {\n            try {\n                const result = await Request.Get(`/booklist-doctor/${this.admin?.id}`);\n                this.list = result.data.data;\n                this.loading = false;\n            } catch (error) {\n                alert(error);\n            }\n        }\n    },\n    data() {\n        return {\n            value: '',\n            id: null,\n            status: -2,\n            list: [],\n            loading: true,\n            counter: 0,\n            timeOut: null,\n            optionalActive: { id: 'all', value: null }\n        }\n    },\n    watch: {\n        admin: function (newData) {\n            if (newData) {\n                this.fetchData();\n            }\n        },\n        optionalActive: async function () {\n            try {\n                this.loading = true;\n                const result = await Request.Post(`/booklist-search`, {\n                    value: this.value,\n                    status: this.optionalActive.value\n                });\n                this.list = result.data.data;\n                this.loading = false;\n            } catch (error) {\n                alert(error);\n            }\n        }\n    }\n}\n</script>\n<style scoped>\ntable {\n    border-collapse: collapse;\n    border: 1px solid #868585;\n    width: 100%;\n    color: #333;\n    font-size: 14px;\n    text-align: left;\n    border-radius: 40px;\n    overflow: hidden;\n    margin: auto;\n    margin-top: 50px;\n    margin-bottom: 50px;\n}\n\ntable th {\n    background-color: #C6E2FF;\n    color: #fff;\n    font-weight: 500;\n    padding: 10px;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    border-top: 1px solid #fff;\n    border-bottom: 1px solid #ccc;\n}\n\ntable tr:nth-child(even) td {\n    background-color: #f2f2f2;\n}\n\ntable tr:hover td {\n    background-color: #E8E8E8;\n}\n\ntable td {\n    background-color: #fff;\n    padding: 10px;\n    border-bottom: 1px solid #ccc;\n    font-weight: 500;\n}\n</style>"]}]}