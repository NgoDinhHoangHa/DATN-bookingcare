{"remainingRequest":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\src\\components\\manage\\modal\\ModalTimeBook.vue?vue&type=template&id=72205ff2","dependencies":[{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\src\\components\\manage\\modal\\ModalTimeBook.vue","mtime":1696609026815},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696609014128},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\babel-loader\\lib\\index.js","mtime":1696609013865},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1696609025699},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696609014128},{"path":"C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1696609025699}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPE1vZGFsQWRtaW4gOmlkPSJpZCIgOnRpdGxlPSInVGjhu51pIGdpYW4gxJHhurd0JyIgOnJlc2V0PSJyZXNldCIgOm5hbWVCdXR0b249ImAke2lkID8gJ1Phu61hJyA6ICdUaMOqbSd9IHRo4budaSBnaWFuIMSR4bq3dGAiDQogICAgICAgIDpvblN1Ym1pdD0ib25TdWJtaXQiPg0KICAgICAgICA8SW5wdXRDb21wb25lbnQgOnR5cGU9Iid0ZXh0JyIgOnBsYWNlaG9sZGVyPSInTmjhuq1wIHRo4budaSBnaWFuJyIgOm9uQ2hhbmdlPSJvbkNoYW5nZSIgOmljb249IidieCBieC10aW1lJyINCiAgICAgICAgICAgIDplcnJvck1lc3NhZ2U9InRpbWUuZXJyb3IgPyAnVGjhu51pIGdpYW4ga2jDtG5nIMSRxrDhu6NjIHRy4buRbmcnIDogbnVsbCIgOm5hbWU9Iid0aW1lJyIgOnZhbHVlPSJ0aW1lLnZhbHVlIj4NCiAgICAgICAgPC9JbnB1dENvbXBvbmVudD4NCiAgICA8L01vZGFsQWRtaW4+DQo="},{"version":3,"sources":["C:\\Users\\OS\\OneDrive - University of Technology and Education\\Desktop\\DATN-bookingcare\\web_hospitall\\src\\components\\manage\\modal\\ModalTimeBook.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/OS/OneDrive - University of Technology and Education/Desktop/DATN-bookingcare/web_hospitall/src/components/manage/modal/ModalTimeBook.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <ModalAdmin :id=\"id\" :title=\"'Thời gian đặt'\" :reset=\"reset\" :nameButton=\"`${id ? 'Sửa' : 'Thêm'} thời gian đặt`\"\r\n        :onSubmit=\"onSubmit\">\r\n        <InputComponent :type=\"'text'\" :placeholder=\"'Nhập thời gian'\" :onChange=\"onChange\" :icon=\"'bx bx-time'\"\r\n            :errorMessage=\"time.error ? 'Thời gian không được trống' : null\" :name=\"'time'\" :value=\"time.value\">\r\n        </InputComponent>\r\n    </ModalAdmin>\r\n</template>\r\n<script>\r\nimport ModalAdmin from '../ModalAdmin.vue';\r\nimport InputComponent from '../InputComponent.vue';\r\nimport { mapMutations, mapState } from 'vuex';\r\nimport Request from '../../../Request';\r\n\r\nexport default {\r\n    props: ['id', 'setList', 'list', 'reset'],\r\n    components: { ModalAdmin, InputComponent },\r\n    computed: {\r\n        ...mapState(['modal'])\r\n    },\r\n    data() {\r\n        return {\r\n            time: {\r\n                value: '',\r\n                error: null\r\n            },\r\n            data: null\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations(['setModal']),\r\n        setLoading: function (status) {\r\n            this.setModal({ ...this.modal, loading: status })\r\n        },\r\n        closeModal: function () {\r\n            this.setModal({ ...this.modal, loading: true, data: null })\r\n        },\r\n        onSubmit: async function () {\r\n            this.time.error = this.time.value.length === 0\r\n\r\n            if (!this.time.error) {\r\n                //\r\n                try {\r\n                    let result;\r\n                    if (this.id) {\r\n                        result = await Request.Put('/timebooks', {\r\n                            time: this.time.value,\r\n                            id: this.id\r\n                        })\r\n                    }\r\n                    else {\r\n                        result = await Request.Post('/timebooks', { time: this.time.value })\r\n                    }\r\n                    this.setList(result.data.data);\r\n                    this.reset();\r\n                    this.closeModal();\r\n                } catch (error) {\r\n                    alert(error);\r\n                }\r\n            }\r\n        },\r\n        onChange: function (event) {\r\n            this[event.target.name].value = event.target.value;\r\n            this[event.target.name].error = event.target.value.length === 0;\r\n        }\r\n    },\r\n    mounted() {\r\n        (async () => {\r\n            try {\r\n                this.setLoading(true)\r\n                if (this.id) {\r\n                    const result = await Request.Get(`/timebooks/${this.id}`);\r\n                    if (result.data.data) {\r\n                        const data = result.data.data;\r\n                        this.time.value = data.time;\r\n                        this.data = data;\r\n                    }\r\n                    else {\r\n                        alert('Lỗi dữ liệu.')\r\n                        this.closeModal()\r\n                    }\r\n                }\r\n                this.setLoading(false)\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        })()\r\n    }\r\n}\r\n</script>"]}]}